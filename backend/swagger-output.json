{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/test": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/person/": {
      "get": {
        "description": "Get all people in the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/person/first-name/{firstName}": {
      "get": {
        "description": "Get people with a specific first name from the database",
        "parameters": [
          {
            "name": "firstName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/person/last-name/{lastName}": {
      "get": {
        "description": "Get people with a specific last name from the database",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/person/email/{email}": {
      "get": {
        "description": "Get people with a specific email address from the database",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/person/username/{username}": {
      "get": {
        "description": "Get people with a specific username from the database",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/person/phone-number/{phoneNumber}": {
      "get": {
        "description": "Get people with a specific phone number from the database",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/person/me": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/person/{id}": {
      "get": {
        "description": "Get a person by their unique ID from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/": {
      "get": {
        "description": "Get all locations in the database",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/stringify": {
      "get": {
        "description": "Get all stringified locations",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/stringify/city/{city}": {
      "get": {
        "description": "Get stringified locations filtered by city",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/stringify/region/{region}": {
      "get": {
        "description": "Get stringified locations filtered by region",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/stringify/country/{country}": {
      "get": {
        "description": "Get stringified locations filtered by country",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/stringify/{id}": {
      "get": {
        "description": "Get stringified locations filtered by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/city/{city}": {
      "get": {
        "description": "Get locations filtered by city",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/region/{region}": {
      "get": {
        "description": "Get locations filtered by region",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/country/{country}": {
      "get": {
        "description": "Get locations filtered by country",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/location/{id}": {
      "get": {
        "description": "Get locations filtered by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/product/": {
      "get": {
        "description": "Get all products in the database",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/product/name/{name}": {
      "get": {
        "description": "Get a product by its name from the database",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/product/cp-id/{contactPersonId}": {
      "get": {
        "description": "Get products associated with a specific contact person ID in the database",
        "parameters": [
          {
            "name": "contactPersonId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/product/{id}": {
      "get": {
        "description": "Get a product by its ID from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/repository/": {
      "get": {
        "description": "Get all repositories in the database",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/repository/name/{name}": {
      "get": {
        "description": "Get repository by its name in the database",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/repository/cp-id/{contactPersonId}": {
      "get": {
        "description": "Get repositories affiliated associated with a contact person ID in the database",
        "parameters": [
          {
            "name": "contactPersonId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/repository/{id}": {
      "get": {
        "description": "Get repository by id in the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/sessions/": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "",
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/search/": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}